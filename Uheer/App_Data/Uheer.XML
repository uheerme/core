<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Uheer</name>
    </assembly>
    <members>
        <member name="T:Uheer.BundleConfig">
            <summary>
            Bundle configuration class.
            </summary>
        </member>
        <member name="M:Uheer.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)">
            <summary>
            Register all bundles required for the web app.
            </summary>
            <param name="bundles">The bundle that will be configured.</param>
        </member>
        <member name="T:Uheer.App_Start.UnityResolver">
            <summary>
            The IoC resolver module.
            </summary>
        </member>
        <member name="F:Uheer.App_Start.UnityResolver.container">
            <summary>
            The injected container.
            </summary>
        </member>
        <member name="M:Uheer.App_Start.UnityResolver.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Default UnityResolver constructor.
            </summary>
            <param name="container">The container that will be resolved.</param>
        </member>
        <member name="T:Uheer.WebApiConfig">
            <summary>
            The default WebAPI configuration class.
            </summary>
        </member>
        <member name="M:Uheer.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            initiates the UnityContainer and registers the services.
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Uheer.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:Uheer.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,Uheer.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:Uheer.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:Uheer.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:Uheer.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:Uheer.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:Uheer.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:Uheer.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:Uheer.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:Uheer.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Uheer.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Uheer.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:Uheer.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:Uheer.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:Uheer.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:Uheer.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Uheer.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,Uheer.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,Uheer.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:Uheer.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Uheer.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:Uheer.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(Uheer.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:Uheer.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:Uheer.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Uheer.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:Uheer.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:Uheer.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="T:Uheer.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Uheer.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:Uheer.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleKey.#ctor(Uheer.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Uheer.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:Uheer.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:Uheer.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Uheer.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,Uheer.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Uheer.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:Uheer.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:Uheer.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:Uheer.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Uheer.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:Uheer.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:Uheer.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:Uheer.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:Uheer.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:Uheer.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:Uheer.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Uheer.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:Uheer.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:Uheer.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Uheer.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Uheer.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:Uheer.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:Uheer.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Uheer.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Uheer.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:Uheer.Controllers.AccountController.GetUserInfo">
            <summary>
            Get information about the currently authenticated user.
            </summary>
            <returns>The UserInfoViewModel that represents the currently authenticated user.</returns>
        </member>
        <member name="M:Uheer.Controllers.AccountController.Logout">
            <summary>
            Log out the authenticated user and remove its permissions.
            </summary>
            <returns>A response with status code equals to 200.</returns>
        </member>
        <member name="M:Uheer.Controllers.AccountController.GetManageInfo(System.String,System.Boolean)">
            <summary>
            Get manage information about the authenticated user.
            </summary>
            <param name="returnUrl">The return URL used by external login providers.</param>
            <param name="generateState">Defines if a state should be generated.</param>
            <returns>The ManageInfoViewModel associated with the authenticated user.</returns>
        </member>
        <member name="M:Uheer.Controllers.AccountController.ChangePassword(Uheer.ViewModels.ChangePasswordBindingModel)">
            <summary>
            Change the password of the authenticated user.
            </summary>
            <param name="model">The view model that represents the change password operation.</param>
            <returns>A Response with status code equals to 200, if succeeded. A BadRequest with the errors, otherwise.</returns>
        </member>
        <member name="M:Uheer.Controllers.AccountController.SetPassword(Uheer.ViewModels.SetPasswordBindingModel)">
            <summary>
            Set the password of the currently authenticated user. This operation will fail if the user already has a password.
            </summary>
            <param name="model">The view model that represents the set password operation.</param>
            <returns>A Response with status code equals to 200, if succeeded. A BadRequest with the errors, otherwise.</returns>
        </member>
        <member name="M:Uheer.Controllers.AccountController.AddExternalLogin(Uheer.ViewModels.AddExternalLoginBindingModel)">
            <summary>
            Associate a third party account to the current , such as Google, Facebook or Twitter.
            </summary>
            <param name="model">The view model that contains the external access token used in the association.</param>
            <returns>A Response with status code equals to 200, if succeeded. A BadRequest with the errors, otherwise.</returns>
        </member>
        <member name="M:Uheer.Controllers.AccountController.RemoveLogin(Uheer.ViewModels.RemoveLoginBindingModel)">
            <summary>
            Unlink a third party authentication provider from the authenticated user's account.
            </summary>
            <param name="model">The view model that represents the auth provider that will be removed.</param>
            <returns>A Response with status code equals to 200, if succeeded. A BadRequest with the errors, otherwise.</returns>
        </member>
        <member name="M:Uheer.Controllers.AccountController.Register(Uheer.ViewModels.RegisterBindingModel)">
            <summary>
            Register a new Account.
            </summary>
            <param name="model">Holds basic information about the new account.</param>
            <returns>A Response with status code equals to 200, if succeeded. A BadRequest with the errors, otherwise.</returns>
        </member>
        <member name="M:Uheer.Controllers.AccountController.RegisterExternal(Uheer.ViewModels.RegisterExternalBindingModel)">
            <summary>
            Register a new Account from a third party authentication provider.
            </summary>
            <param name="model">Holds basic information about the new account.</param>
            <returns>A Response with status code equals to 200, if succeeded. A BadRequest with the errors, otherwise.</returns>
        </member>
        <member name="T:Uheer.Controllers.MusicsController">
            <summary>
            The Music resource's controller.
            </summary>
        </member>
        <member name="M:Uheer.Controllers.MusicsController.#ctor(Uheer.Services.MusicService)">
            <summary>
            Constructor for Music resource's controller.
            </summary>
            <param name="musics">The music service which will be injected.</param>
        </member>
        <member name="M:Uheer.Controllers.MusicsController.GetMusics(System.Int32,System.Int32)">
            <summary>
            Get all musics currently on the database.
            </summary>
            <param name="skip">The number of musics to ignore.</param>
            <param name="take">The maximum length of the collection retrieved.</param>
            <returns>A collection of MusicResultViewModel.</returns>
        </member>
        <member name="M:Uheer.Controllers.MusicsController.GetMusic(System.Int32)">
            <summary>
            Retrieve a music with given Id.
            </summary>
            <param name="id">The id of the Music that will be retrieved.</param>
            <returns>MusicResultViewModel</returns>
        </member>
        <member name="M:Uheer.Controllers.MusicsController.PutMusic(Uheer.ViewModels.MusicUpdateViewModel)">
            <summary>
            Updates a given music Id.
            </summary>
            <param name="model">The view model for the Music to be updated.</param>
            <returns>A Response with status code equals to 200.</returns>
        </member>
        <member name="M:Uheer.Controllers.MusicsController.PostMusic">
            <summary>
            Create a new Music.
            </summary>
            <param name="Name">The name that will be displayed to the listeners.</param>
            <param name="ChannelId">The Id of the Channel that holds the music.</param>
            <param name="LengthInSeconds">The length of the music that is being uploaded.</param>
            <param name="File">The music's actual file.</param>
            <returns>A response with the created Music, if succeeded. A BadRequest response, otherwise.</returns>
        </member>
        <member name="M:Uheer.Controllers.MusicsController.GetMusicStream(Uheer.ViewModels.MusicDownloadViewModel)">
            <summary>
            Request for the stream of a specific Music's file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Uheer.Controllers.MusicsController.DeleteMusic(System.Int32)">
            <summary>
            Delete a Music with a given Id.
            </summary>
            <param name="id">The id of the Music to be deleted.</param>
            <returns>The Music deleted.</returns>
        </member>
        <member name="T:Uheer.Controllers.ChannelsController">
            <summary>
            The Channel's resource controller.
            </summary>
        </member>
        <member name="M:Uheer.Controllers.ChannelsController.#ctor(Uheer.Services.ChannelService,Uheer.Services.MusicService)">
            <summary>
            Default ChannelsController constructor.
            </summary>
            <param name="channels">The ChannelService automaticly injected.</param>
            <param name="musics">The MusicService automaticly injected.</param>
        </member>
        <member name="M:Uheer.Controllers.ChannelsController.GetChannels(System.Int32,System.Int32)">
            <summary>
            Get a list of channels.
            </summary>
            <param name="skip">The number of channels to ignore.</param>
            <param name="take">The maximum number of channels in the returned list.</param>
            <returns>The collection of channels.</returns>
        </member>
        <member name="M:Uheer.Controllers.ChannelsController.GetActiveChannels(System.Int32,System.Int32)">
            <summary>
            Get a list of active channels, descendingly ordered by their Id.
            </summary>
            <param name="skip">The number of channels to ignore.</param>
            <param name="take">The maximum number of channels in the returned list.</param>
            <returns>The collection of active channels.</returns>
        </member>
        <member name="M:Uheer.Controllers.ChannelsController.GetChannel(System.Int32)">
            <summary>
            Retrieve a channel with a given Id.
            </summary>
            <param name="id">The id of the Channel that will be retrieved.</param>
            <returns>ChannelResultViewModel</returns>
        </member>
        <member name="M:Uheer.Controllers.ChannelsController.PutChannel(Uheer.ViewModels.ChannelUpdateViewModel)">
            <summary>
            Updates a Channel with a given Id.
            </summary>
            <param name="model">The view model for the Channel to be updated.</param>
            <returns>A response with a status code equals to 200.</returns>
        </member>
        <member name="M:Uheer.Controllers.ChannelsController.PostChannel(Uheer.ViewModels.ChannelCreateViewModel)">
            <summary>
            Create a new Channel.
            </summary>
            <param name="model">The view model for the Channel to be created.</param>
            <returns>A response with the created Channel, if succeeded. A BadRequest response, otherwise.</returns>
        </member>
        <member name="M:Uheer.Controllers.ChannelsController.PostPlay(System.Int32,System.Int32)">
            <summary>
            Play a determined music.
            </summary>
            <param name="channelId">The Id of the Channel.</param>
            <param name="musicId">The Id of the Music that should start playing.</param>
            <returns>The Channel with the reference of the playing music.</returns>
        </member>
        <member name="M:Uheer.Controllers.ChannelsController.PostDeactivateChannel(System.Int32)">
            <summary>
            Deactivate a channel with given Id.
            </summary>
            <param name="id">The Id of the channel to be deactivated.</param>
            <returns>The deactivated channel.</returns>
        </member>
        <member name="M:Uheer.Controllers.ChannelsController.DeleteChannel(System.Int32)">
            <summary>
            Delete a Channel with given Id.
            </summary>
            <param name="id">The id of the Channel to be deleted.</param>
            <returns>The Channel deleted.</returns>
        </member>
        <member name="M:Uheer.Controllers.ChannelsController.GetMusicsOfChannel(System.Int32,System.Int32,System.Int32)">
            <summary>
            Retrieve a Music collection associated with a Channel.
            </summary>
            <param name="id">The Id of the channel that contains the music collection.</param>
            <param name="skip">The number of musics to ignore.</param>
            <param name="take">The maximum length of the collection retrieved.</param>
            <returns>A list of Musics associated with a Channel.</returns>
        </member>
        <member name="T:Uheer.Controllers.HomeController">
            <summary>
            The web application's controller.
            </summary>
        </member>
        <member name="M:Uheer.Controllers.HomeController.Index">
            <summary>
            The method that returns the Home view, which contains the angular.js application.
            </summary>
            <returns>The Home view.</returns>
        </member>
        <member name="T:Uheer.Controllers.StatusController">
            <summary>
            The controller responsible for reporting the API status.
            </summary>
        </member>
        <member name="M:Uheer.Controllers.StatusController.GetCurrentTime">
            <summary>
            Get the current timestamp set in the server.
            For synchronization purposes, please consider the round trip time-frame when requesting this route.
            </summary>
            <returns>A CurrentServerTimeViewModel containing the current timestamp in the server.</returns>
        </member>
        <member name="T:Uheer.Managers.UheerAuthorizationManager">
            <summary>
            Authorization manager.
            Defines the authorization logic behide Uheer's backend.
            </summary>
        </member>
        <member name="M:Uheer.Managers.UheerAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
            <summary>
            Check if an user has authoritah to access a resource on a given context.
            </summary>
            <param name="context">The context in which the claim authorization decorator was invoked.</param>
            <returns>True, if the user is authorized to access the resource. False, otherwise.</returns>
        </member>
        <member name="T:Uheer.ViewModels.AddExternalLoginBindingModel">
            <summary>
            View model used during a third party authentication process.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.AddExternalLoginBindingModel.ExternalAccessToken">
            <summary>
            The access token given by the third party authentication provider.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.ChangePasswordBindingModel">
            <summary>
            View model used during the change of a Account's password.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChangePasswordBindingModel.OldPassword">
            <summary>
            The old password associated with the Account.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChangePasswordBindingModel.NewPassword">
            <summary>
            The password that the Account must be associated with.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChangePasswordBindingModel.ConfirmPassword">
            <summary>
            The confirmation of the new password. This field must be identical to the previous one.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.RegisterBindingModel">
            <summary>
            View model used during the process of registration of a new Account.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.RegisterBindingModel.Email">
            <summary>
            The email that will uniquely identify the Account.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.RegisterBindingModel.Password">
            <summary>
            The password that the Account must be associated with.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.RegisterBindingModel.ConfirmPassword">
            <summary>
            The confirmation of the new password. This field must be identical to the previous one.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.RegisterExternalBindingModel">
            <summary>
            View model used during the first login (and, consecutively, registration) by a third party authentication provider.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.RegisterExternalBindingModel.Email">
            <summary>
            The email that will uniquely identify the Account.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.MusicCreateViewModel">
            <summary>
            The view model used to create Music entries in the database.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicCreateViewModel.Name">
            <summary>
            The name that the new Music will assume. The music file will be renamed to match this name.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicCreateViewModel.ChannelId">
            <summary>
            The id of the Channel that contains this Music.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicCreateViewModel.LengthInMilliseconds">
            <summary>
            The duration of the music in milliseconds.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicCreateViewModel.SizeInBytes">
            <summary>
            The size (in bytes) that the music file occupies/occupied in the server's disks.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.MusicUpdateViewModel">
            <summary>
            The view model used to update Music entries in the database.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicUpdateViewModel.Id">
            <summary>
            The surrogate key that uniquely identifies a Music in the database.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicUpdateViewModel.Name">
            <summary>
            The name that the new Music will assume. The music file will be renamed to match this name.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.MusicResultViewModel">
            <summary>
            The view model used to display Music entries.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicResultViewModel.Id">
            <summary>
            The surrogate key that uniquely identifies a Music in the database.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicResultViewModel.Name">
            <summary>
            The name of the Music.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicResultViewModel.LengthInMilliseconds">
            <summary>
            The duration of the music in milliseconds.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicResultViewModel.SizeInBytes">
            <summary>
            The size (in bytes) that the music file occupies/occupied in the server's disks.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicResultViewModel.ChannelId">
            <summary>
            The id of the Channel which contains the Music.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicResultViewModel.DateCreated">
            <summary>
            The moment when the Music was created.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicResultViewModel.DateUpdated">
            <summary>
            The moment when the Music was last updated. If it never were, this value will be null.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.MusicDownloadViewModel">
            <summary>
            The view model used to request the stream of a Music's file.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.MusicDownloadViewModel.Id">
            <summary>
            The surrogate key that uniquely identifies a Music in the database.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.ChannelCreateViewModel">
            <summary>
            The view model used to create Channel entries in the database.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelCreateViewModel.Name">
            <summary>
            The name that the new Channel should assume.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelCreateViewModel.Owner">
            <summary>
            The Owner of the new Channel. It can be their MAC address, email or regular username.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelCreateViewModel.HostIpAddress">
            <summary>
            The IP address that uniquely identifies the network used by the Owner of the channel.
            This property is overridden by the server's storage procedure and will be ignored if sent to the server.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelCreateViewModel.HostMacAddress">
            <summary>
            The MAC address that uniquely identifies the network used by the Owner of the channel.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.ChannelUpdateViewModel">
            <summary>
            The view model used to update Channel entries in the database.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelUpdateViewModel.Id">
            <summary>
            The surrogate key that uniquely identifies a Channel in the database.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelUpdateViewModel.Name">
            <summary>
            The new name that the existing Channel should assume.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelUpdateViewModel.Loops">
            <summary>
            A boolean that indicates if the Channel loops its musics or not.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.ChannelResultViewModel">
            <summary>
            The view-model which represents a Channel entry with its Musics.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.ChannelListResultViewModel">
            <summary>
            The view-model which represents a Channel entry without its Musics.
            </summary>
        </member>
        <member name="M:Uheer.ViewModels.ChannelListResultViewModel.op_Explicit(Uheer.Core.Channel)~Uheer.ViewModels.ChannelListResultViewModel">
            <summary>
            Explicit conversion from Channel to ChannelListResultViewModel.
            </summary>
            <param name="c">The Channel that will be converted.</param>
            <returns>The ChannelListResultViewModel that represents the Channel c.</returns>
        </member>
        <member name="P:Uheer.ViewModels.ChannelListResultViewModel.Id">
            <summary>
            The surrogate key that uniquely identifies a Channel in the database.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelListResultViewModel.Name">
            <summary>
            The name of the Channel.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelListResultViewModel.Owner">
            <summary>
            The Owner of the Channel. It can be set to be the email address, the MAC address or a regular username.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelListResultViewModel.HostIpAddress">
            <summary>
            The IP address that uniquely identifies the network used by the Owner of the channel.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelListResultViewModel.HostMacAddress">
            <summary>
            The MAC address that uniquely identifies the network used by the Owner of the channel.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelListResultViewModel.Loops">
            <summary>
            A boolean that indicates if the Channel loops its musics or not.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelListResultViewModel.CurrentId">
            <summary>
            The Id of the Music that is currently being played.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelListResultViewModel.CurrentStartTime">
            <summary>
            The start timestamp of the current music.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelListResultViewModel.DateCreated">
            <summary>
            The moment when the Channel was created.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelListResultViewModel.DateUpdated">
            <summary>
            The moment when the Channel was last updated. If it never were, this value will be null.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelListResultViewModel.DateDeactivated">
            <summary>
            The moment when the Channel was deactivated. If this Channel is still active, this value will be null.
            </summary>
        </member>
        <member name="M:Uheer.ViewModels.ChannelResultViewModel.op_Explicit(Uheer.Core.Channel)~Uheer.ViewModels.ChannelResultViewModel">
            <summary>
            Explicit conversion from Channel to ChannelResultViewModel.
            </summary>
            <param name="c">The Channel that will be converted.</param>
            <returns>The ChannelResultViewModel that represents the Channel c.</returns>
        </member>
        <member name="P:Uheer.ViewModels.ChannelResultViewModel.Musics">
            <summary>
            The collection of Musics that belong to this Channel.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.ChannelCurrentResultViewModel">
            <summary>
            The view model used to indicate which Music is currently being display in a Channel.
            </summary>
        </member>
        <member name="M:Uheer.ViewModels.ChannelCurrentResultViewModel.op_Explicit(Uheer.Core.Channel)~Uheer.ViewModels.ChannelCurrentResultViewModel">
            <summary>
            Explicit conversion from Channel to ChannelCurrentResultViewModel.
            </summary>
            <param name="c">The Channel that will be converted.</param>
            <returns>The ChannelCurrentResultViewModel that represents the current song being played at the Channel c.</returns>
        </member>
        <member name="P:Uheer.ViewModels.ChannelCurrentResultViewModel.Id">
            <summary>
            The surrogate key that uniquely identifies a Channel in the database.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelCurrentResultViewModel.CurrentId">
            <summary>
            The Id of the Music that is currently being played.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.ChannelCurrentResultViewModel.CurrentStartTime">
            <summary>
            The start timestamp of the current music.
            </summary>
        </member>
        <member name="T:Uheer.ViewModels.CurrentServerTimeViewModel">
            <summary>
            The view model that contains all information required to determine the server's current time.
            </summary>
        </member>
        <member name="P:Uheer.ViewModels.CurrentServerTimeViewModel.Now">
            <summary>
            The timestamp that represents the current time in the server.
            </summary>
        </member>
    </members>
</doc>
